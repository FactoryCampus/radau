swagger: "2.0"

info:
  title: WiFi Login Service
  description: A micro-service backend used to generate and verify tokens for WPA Enterprise setups
  version: "0.1.0"

paths:
  /user:
    post:
      summary: Create a new user
      parameters:
        - in: body
          name: body
          description: User object to be created
          required: true
          schema:
            $ref: "#/definitions/UserCreation"
      responses:
        200:
          description: User which was created
          schema:
            $ref: "#/definitions/User"

  /user/{username}:
    get:
      summary: Get userdata
      parameters:
        - in: path
          name: username
          type: string
          required: true
          description: The username to query
      responses:
        200:
          description: User object
          schema:
            $ref: '#/definitions/User'
        404:
          description: User not found
    put:
      summary: Change userdata
      parameters:
        - in: path
          name: username
          type: string
          required: true
          description: The username to query
        - in: body
          name: body
          schema:
            $ref: '#/definitions/UserUpdate'
      responses:
        200:
          description: User has been changed
          schema:
            $ref: '#/definitions/User'
        404:
          description: USer not found by username
    delete:
      summary: Delete user
      parameters:
        - in: path
          name: username
          type: string
          required: true
          description: The username to query
      responses:
        204:
          description: User has been deleted
        404:
          description: User not found

  /token/{username}:
    post:
      summary: Create a new token for a user
      parameters:
        - in: path
          name: username
          type: string
          required: true
          description: The username to create the token for
      responses:
        200:
          description: Token created
          schema:
            $ref: '#/definitions/TokenOnly'
        404:
          description: User not found
    delete:
      summary: Delete a user's token. This will result in disabling login for that user
      parameters:
        - in: path
          name: username
          type: string
          required: true
          description: The username to delete the token for
      responses:
        204:
          description: Token deleted
        404:
          description: User not found

  /radius:
    get:
      summary: Get info for radius auth
      parameters:
        - in: query
          name: realm
          type: string
          required: true
          description: The user realm to query
      responses:
        200:
          description: The full user info including a token if available
          schema:
            $ref: '#/definitions/User'
        404:
          description: User not found or no token available

securityDefinitions:
  api_key:
    type: apiKey
    name: api_key
    in: header

definitions:
  User:
    type: object
    required: ['username']
    properties:
      username:
        type: string
        description: Usually an email address
      token:
        type: string
        description: Login password used in WPA Enterprise
      extraProperties:
        type: object
        description: Extra radius properties
  UserCreation:
    type: object
    required: ['username']
    properties:
      username:
        type: string
        description: The user identification to use
      extraProperties:
        type: object
        description: Extra radius properties
  UserUpdate:
    type: object
    properties:
      extraProperties:
        type: object
        description: Extra radius properties
  TokenOnly:
    type: object
    required: ['token']
    properties:
      token:
        description: The token of a certain user
        type: string
